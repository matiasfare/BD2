--tema 1
CREATE TABLE TIPOS_TICKET(
ID_TIPO NUMBER (3) NOT NULL,
NOMBRE VARCHAR2 (30 BYTE) NOT NULL,
PLAZO NUMBER (2) NULL,
ID_AREA NUMBER(6) NOT NULL
);

ALTER TABLE TIPOS_TICKET
ADD CONSTRAINT PK_TTICKET PRIMARY KEY (ID_TIPO);

ALTER TABLE TIPOS_TICKET  
ADD (CONSTRAINT FK_IDE_AREA  FOREIGN KEY (ID_AREA) REFERENCES B_AREAS(ID) ) ;


CREATE TABLE TICKETS (
ID_TICKET NUMBER (12) NOT NULL,
ID_PERSONAS NUMBER (8),
FECHA_CREACION DATE NOT NULL,
ID_TIPO NUMBER (3) NOT NULL,
DESCRIPCION VARCHAR2 (2000 BYTE) NOT NULL,
ESTADO VARCHAR2 (1 BYTE) NOT NULL,
FECHA_CIERRE DATE
);


ALTER TABLE TICKETS
ADD CONSTRAINT PK_TICKETS PRIMARY KEY (ID_TICKET,ID_PERSONAS);

ALTER TABLE TICKETS  
ADD (CONSTRAINT FK_ID_TIPO_TICKET  FOREIGN KEY (ID_TIPO) REFERENCES TIPOS_TICKET(ID_TIPO) ) ;

ALTER TABLE TICKETS
ADD CONSTRAINT CHECK_VAL_ESTADO CHECK (ESTADO IN ('N', 'A','P','C'));

ALTER TABLE TICKETS
ADD CONSTRAINT VAL_FECHA_CIERRE CHECK (ESTADO = 'C'); 


CREATE TABLE SEGUIMIENTO_TICKET (
ID_SEGUIMIENTO NUMBER (12) NOT NULL,
ID_TICKET NUMBER (12) NOT NULL,
ID_AREA NUMBER (6) NOT NULL,
CEDULA_EMPLEADO NUMBER (11) NOT NULL,
FECHA_RECEPCION DATE NOT NULL,
TRAMITE_REALIZADO VARCHAR2 (1000 BYTE) NOT NULL,
FECHA_SALIDA DATE NULL,
ID_AREA_DESTINO NUMBER (6),
ESTADO VARCHAR2 (1 BYTE) NOT NULL
);

ALTER TABLE SEGUIMIENTO_TICKET
ADD CONSTRAINT PK_SEG_TICKET PRIMARY KEY (ID_SEGUIMIENTO,ID_TICKET, ID_AREA, CEDULA_EMPLEADO);

ALTER TABLE SEGUIMIENTO_TICKET  
ADD (CONSTRAINT FK_ID_AREA_DESTINO  FOREIGN KEY (ID_AREA_DESTINO) REFERENCES B_AREAS(ID) ) ;

ALTER TABLE SEGUIMIENTO_TICKET 
ADD CONSTRAINT VAL_ID_AREA CHECK (ESTADO = 'R' OR ESTADO = 'E'); 

CREATE SEQUENCE S_TICKET START WITH 1 INCREMENT BY 1;


CREATE PUBLIC SYNONYM TIPOS_TICKET FOR TIPOS_TICKET;
CREATE PUBLIC SYNONYM TICKETS FOR TICKETS ;
CREATE PUBLIC SYNONYM SEGUIMIENTO_TICKET FOR SEGUIMIENTO_TICKET;

GRANT SELECT  ON  TIPOS_TICKET TO PUBLIC;
GRANT SELECT  ON  TICKETS TO PUBLIC;
GRANT SELECT  ON  SEGUIMIENTO_TICKET TO PUBLIC;

-- TEMA 2
UPDATE 
SET ESTADO = 'C'
WHERE ( SELECT 
	ID) 

 MERGE INTO TICKETS()
 ;
 
 
-- TEMA 3
CREATE MATERIALIZED VIEW V_PENDIENTES
BUILD IMMEDIATE
REFRESH START WITH SYSDATE NEXT NEXT_DAY(TRUNC(SYSDATE), 'sunday') + 3/24
AS
SELECT 
	T.ID_TICKET TICKET,
	TT.ID_TIPO TIPO_TRAMITE,
	TT.NOMBRE NOMBRE,
	T.FECHA_CREACION FECHA_CREACION,
	TT.PLAZO PLAZO_ESPAREADO,
	EXTRACT(DAY FROM ST.FECHA_RECEPCION) + EXTRACT(MONTH FROM ST.FECHA_SALIDA)  DURACION_DE_TRAMITE,
	TT.PLAZO - EXTRACT(DAY FROM ST.FECHA_RECEPCION) + EXTRACT(MONTH FROM ST.FECHA_SALIDA) DEMORA,
	DECODE(ST.ID_AREA,BA.ID,BA.NOMBRE_AREA) AREA_ACTUAL,
	ST.ESTADO ESTADO_TRAMITE 
FROM
	TICKETS T JOIN TIPOS_TICKET TT ON T.ID_TIPO = TT.ID_TIPO
	JOIN SEGUIMIENTO_TICKET ST ON ST.ID_TICKET = T.ID_TICKET
	JOIN B_AREAS BA ON BA.ID = ST.ID_AREA
WHERE T.ESTADO != 'C' 
	AND 
	EXTRACT(DAY FROM ST.FECHA_RECEPCION) + EXTRACT(MONTH FROM ST.FECHA_SALIDA) > TT.PLAZO
	;
	
	
-- TEMA 4
DECLARE
 ultimo_ticket number(12) := 1;
 v_cont NUMBER(12) := 0;
 value_max NUMBER(12) := 0;
 max_tk NUMBER(12) := 0;
BEGIN
--obtiene ultimo valor de la secuencia
SELECT max(MIN_VALUE) value_max FROM user_sequences WHERE SEQUENCE_NAME = 'S_TICKET';
--obtiene ultimo valor de id_ticket
SELECT MAX(ID_TICKET) max_tk FROM TICKETS; 
v_cont := max_tk;
ultimo_ticket := value_max;
	WHILE v_cont < ultimo_ticket 
		LOOP
		v_cont:= v_cont+ 1;
		SELECT S_TICKET.NEXTVAL value_max FROM DUAL;
	END LOOP;
dbms_output.put_line (value_max);
END;
/